{"version":3,"sources":["Grade.js","GradeList.js","Section.js","Class.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["Grade","props","data","name","weight","score","id","className","placeholder","type","value","onChange","event","handleChange","sectionID","onClick","deleteGrade","GradeList","gradeList","map","grade","key","Section","sectionName","sectionWeight","sectionGrade","addGrade","deleteSection","Class","classGrade","sectionList","addSection","section","Form","state","classList","currClass","classKey","addClass","bind","deleteClass","JSON","parse","localStorage","getItem","parseInt","this","setState","setItem","stringify","prevState","sectionKey","length","newList","nextClassIndex","findNextClass","filter","cls","i","push","gradeKey","arr","currIndex","classID","indexOf","gradeID","target","index","updatedList","updatedClassList","forEach","setActiveIndex","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67f81223.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Grade.css\"\r\n\r\nexport default function Grade(props) {\r\n  const { name, weight, score, id } = props.data\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"component-grade-input text\"\r\n        name=\"name\"\r\n        placeholder=\"Name\"\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(event) => props.handleChange(event, props.sectionID, id)}\r\n      />\r\n      <input\r\n        className=\"component-grade-input num\"\r\n        name=\"weight\"\r\n        placeholder=\"Weight\"\r\n        type=\"number\"\r\n        value={weight}\r\n        onChange={(event) => props.handleChange(event, props.sectionID, id)}\r\n      />\r\n      <input\r\n        className=\"component-grade-input num\"\r\n        name=\"score\"\r\n        placeholder=\"Score\"\r\n        type=\"number\"\r\n        value={score}\r\n        onChange={(event) => props.handleChange(event, props.sectionID, id)}\r\n      />\r\n      <button className=\"component-delete-grade-btn\" onClick={() => props.deleteGrade(props.sectionID, id)}>Delete</button>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Grade from \"./Grade\"\r\nimport \"./GradeList.css\"\r\n\r\nexport default function GradeList(props) {\r\n  const {id, gradeList} = props.data\r\n\treturn (\r\n\t\t<div>\r\n      <ul>\r\n\t\t\t\t{gradeList.map(grade => {\r\n\t\t\t\t\treturn <Grade\r\n            data={grade}\r\n            sectionID={id}\r\n\t\t\t\t\t\tdeleteGrade={props.deleteGrade}\r\n\t\t\t\t\t\thandleChange={props.handleChange}\r\n            key={grade.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t})}\r\n        </ul>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport GradeList from \"./GradeList\"\r\nimport \"./Section.css\"\r\n\r\nexport default function Section(props) {\r\n  const { id, sectionName, sectionWeight, sectionGrade } = props.data\r\n  return (\r\n    <div className=\"component-section-container\">\r\n      <input\r\n        className=\"component-section-input\"\r\n\t\t\t\tname=\"sectionName\"\r\n\t\t\t\tplaceholder=\"Section Name\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={sectionName}\r\n\t\t\t\tonChange={(event) => props.handleChange(event, id)}\r\n\t\t\t/>\r\n      <input\r\n        className=\"component-section-input num\"\r\n        name=\"sectionWeight\"\r\n        placeholder=\"Weight\"\r\n        type=\"number\"\r\n        value={sectionWeight}\r\n        onChange={(event) => props.handleChange(event, id)}\r\n      />\r\n      <button className=\"component-add-grade-btn\" onClick={() => props.addGrade(id)}>Add Grade</button>\r\n      <button className=\"component-delete-section-btn\" onClick={() => props.deleteSection(id)}>Delete section</button>\r\n      <span>Grade: {sectionGrade}</span>\r\n      <GradeList\r\n        data={props.data}\r\n        deleteGrade={props.deleteGrade}\r\n        handleChange={props.handleChange}\r\n      />\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Section from \"./Section\"\r\nimport \"./Class.css\"\r\n\r\nexport default function Class(props) {\r\n  const { id, name, classGrade, sectionList } = props.data\r\n\r\n  return (\r\n    <div className=\"component-class-container\">\r\n      <input\r\n        className=\"component-class-name\"\r\n        name=\"className\"\r\n        placeholder=\"Class Name\"\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(event) => props.handleChange(event, id)}\r\n      />\r\n      <button className=\"component-add-section-btn\" onClick={props.addSection}>Add Section</button>\r\n      <span>Class grade: {classGrade}</span>\r\n      {sectionList.map(section => {\r\n        return <Section\r\n          data={section}\r\n          deleteSection={props.deleteSection}\r\n          addGrade={props.addGrade}\r\n          deleteGrade={props.deleteGrade}\r\n          handleChange={props.handleChange}\r\n        />\r\n      })}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Class from \"./Class\"\r\nimport \"./Form.css\"\r\n\r\nexport default class Form extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      classList: [],\r\n      currClass: 0,\r\n      classKey: 0\r\n    }\r\n    this.addClass = this.addClass.bind(this)\r\n    this.deleteClass = this.deleteClass.bind(this)\r\n    this.addSection = this.addSection.bind(this)\r\n    this.deleteSection = this.deleteSection.bind(this)\r\n    this.addGrade = this.addGrade.bind(this)\r\n    this.deleteGrade = this.deleteGrade.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    //retrieve local storage if found\r\n    const classList = JSON.parse(localStorage.getItem('classList'))\r\n    const currClass = localStorage.getItem('currClass')\r\n    const classKey = parseInt(localStorage.getItem('classKey'))\r\n    if (classList !== null) {\r\n      this.setState({ classList, currClass, classKey })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //save to local storage\r\n    const { classList, currClass, classKey } = this.state\r\n    localStorage.setItem('classList', JSON.stringify(classList))\r\n    localStorage.setItem('currClass', currClass)\r\n    localStorage.setItem('classKey', classKey)\r\n  }\r\n\r\n  addClass() {\r\n    this.setState(prevState => {\r\n      return {\r\n        classList: [...prevState.classList, { id: prevState.classKey, name: \"\", sectionList: [], sectionKey: 0, classGrade: \"\" }],\r\n        currClass: prevState.classList.length,\r\n        classKey: prevState.classKey + 1\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteClass() {\r\n    const newList = [...this.state.classList]\r\n    const currClass = this.state.currClass\r\n    this.setState(prevState => {\r\n      const nextClassIndex = this.findNextClass(prevState.classList, currClass)\r\n      return {\r\n        classList: newList.filter((cls, i) => i !== currClass),\r\n        currClass: nextClassIndex\r\n      }\r\n    })\r\n  }\r\n\r\n  addSection() {\r\n    this.setState(prevState => {\r\n      const newList = [...prevState.classList]\r\n      let sectionKey = newList[prevState.currClass].sectionKey++\r\n      newList[prevState.currClass].sectionList.push({ id: sectionKey, sectionName: \"\", sectionWeight: \"\", sectionGrade: \"\", gradeList: [], gradeKey: 0 })\r\n      return {\r\n        classList: newList\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteSection(sectionID) {\r\n    this.setState(prevState => {\r\n      const newList = [...prevState.classList]\r\n      newList[prevState.currClass].sectionList = newList[prevState.currClass].sectionList.filter(section => section.id !== sectionID)\r\n      return {\r\n        classList: newList\r\n      }\r\n    })\r\n  }\r\n\r\n  findNextClass(arr, currIndex) {\r\n    if (currIndex < arr.length - 1) {\r\n      return currIndex\r\n    } else if (currIndex > 0) {\r\n      return currIndex - 1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  setActiveIndex(classID) {\r\n    this.setState(prevState => {\r\n      const classIDs = prevState.classList.map(cls => cls.id)\r\n      return {\r\n        currClass: classIDs.indexOf(classID)\r\n      }\r\n    })\r\n  }\r\n\r\n  addGrade(sectionID) {\r\n    this.setState(prevState => {\r\n      const newList = [...prevState.classList]\r\n      newList[prevState.currClass].sectionList.map(section => {\r\n        if (section.id !== sectionID) {\r\n          return section\r\n        } else {\r\n          const gradeKey = section.gradeKey\r\n          section.gradeList.push({ id: gradeKey, name: \"\", weight: \"\", score: \"\" })\r\n          section.gradeKey++\r\n          return section\r\n        }\r\n      })\r\n      return {\r\n        classList: newList\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteGrade(sectionID, gradeID) {\r\n    this.setState(prevState => {\r\n      const newList = [...prevState.classList]\r\n      newList[prevState.currClass].sectionList.map(section => {\r\n        if (section.id !== sectionID) {\r\n          return section\r\n        } else {\r\n          section.gradeList = section.gradeList.filter(grade => grade.id !== gradeID)\r\n          return section\r\n        }\r\n      })\r\n      return {\r\n        classList: newList\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChange(event, sectionID, gradeID) {\r\n    const { name, value } = event.target\r\n    if (name === \"className\") {\r\n      //change name based on id\r\n      this.setState(prevState => {\r\n        const index = prevState.currClass\r\n        const updatedList = prevState.classList\r\n        updatedList[index].name = value\r\n        return {\r\n          classList: updatedList\r\n        }\r\n      })\r\n    } else if (name === \"sectionName\" || name === \"sectionWeight\") {\r\n      this.setState(prevState => {\r\n        const index = prevState.currClass\r\n        const updatedList = prevState.classList\r\n\r\n        let classGrade = 0\r\n\r\n        updatedList[index].sectionList.map(section => {\r\n          if (section.id !== sectionID) {\r\n            classGrade += section.sectionWeight * section.sectionGrade\r\n            return section\r\n          } else {\r\n            section[name] = value\r\n            classGrade += section.sectionWeight * section.sectionGrade\r\n            return section\r\n          }\r\n        })\r\n        updatedList[index].classGrade = classGrade\r\n        return {\r\n          classList: updatedList\r\n        }\r\n      })\r\n    } else {\r\n      this.setState(prevState => {\r\n        const updatedClassList = prevState.classList\r\n        const index = prevState.currClass\r\n\r\n        let classGrade = 0\r\n        updatedClassList[index].sectionList = updatedClassList[index].sectionList.map(section => {\r\n          let sectionGrade = 0\r\n          if (section.id !== sectionID) {\r\n            classGrade += section.sectionWeight * section.sectionGrade\r\n            return section\r\n          } else {\r\n            section.gradeList = section.gradeList.map(grade => {\r\n              if (grade.id !== gradeID) {\r\n                return grade\r\n              } else {\r\n                return {\r\n                  ...grade,\r\n                  [name]: value\r\n                }\r\n              }\r\n            })\r\n            section.gradeList.forEach(grade => sectionGrade += grade.weight * grade.score)\r\n            section.sectionGrade = sectionGrade\r\n            classGrade += section.sectionWeight * section.sectionGrade\r\n            return section\r\n          }\r\n        })\r\n        updatedClassList[index].classGrade = classGrade\r\n        return {\r\n          classList: updatedClassList\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"component-add-class-btn\" onClick={this.addClass}>Add class</button>\r\n        <button className=\"component-delete-class-btn\" onClick={this.deleteClass}>Delete current class</button>\r\n        <br /> <br />\r\n        <div className=\"component-flex-container\">\r\n          {this.state.classList.map(cls => {\r\n            let className = cls.name\r\n            if (className === \"\") {\r\n              className = \"Class \" + (cls.id + 1)\r\n            }\r\n            return (\r\n              <button\r\n                className={(this.state.classList[this.state.currClass].id === cls.id) ? \"component-class-tab active\" : \"component-class-tab\"}\r\n                onClick={() => this.setActiveIndex(cls.id)}>\r\n                {className}\r\n              </button>\r\n            )\r\n          })}\r\n        </div>\r\n        <br /> <br />\r\n        {(this.state.classList.length !== 0) ?\r\n          <Class\r\n            data={this.state.classList[this.state.currClass]}\r\n            addSection={this.addSection}\r\n            deleteSection={this.deleteSection}\r\n            addGrade={this.addGrade}\r\n            deleteGrade={this.deleteGrade}\r\n            handleChange={this.handleChange}\r\n          />\r\n          :\r\n          <h4>Add a class to get started!</h4>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport Form from \"./Form\"\r\nimport \"./App.css\"\r\n\r\nexport default function App(props) {\r\n\treturn (\r\n\t\t<div className=\"app-container\">\r\n\t\t\t<h2>Grade Manager</h2>\r\n\t\t\t<Form />\r\n\t\t</div>\r\n\t)\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}